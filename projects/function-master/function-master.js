//////////////////////////////////////////////////////////////////////
// Function 1 - Object Values ////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function objectValues(object) {
return Object.values(object);
}


//////////////////////////////////////////////////////////////////////
// Function 2 - Keys to String ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function keysToString(object) {
return Object.keys(object).join(" ");
}

//////////////////////////////////////////////////////////////////////
// Function 3 - Values to String /////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function valuesToString(object) {
    var values = [];
    
    for (var key in object) {
        if (typeof object[key] === "string") {
            values.push(object[key])
        }
        
    }
        return values.join(" ");
}

//////////////////////////////////////////////////////////////////////
// Function 4 - Array or Object //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function arrayOrObject(collection) {
    if (Array.isArray(collection))
        return "array";
    if (typeof collection === "object")
        return "object";
}
//////////////////////////////////////////////////////////////////////
// Function 5 - Capitalize Word //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function capitalizeWord(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}

//////////////////////////////////////////////////////////////////////
// Function 6 - Capitalize All Words /////////////////////////////////
//////////////////////////////////////////////////////////////////////

function capitalizeAllWords(string) {
   
   //create variable to hold split array
    var splitArray = string.split(" ");
    //loop through array
    for (var i = 0; i < splitArray.length; i++) {
        splitArray[i] = splitArray[i][0].toUpperCase() + splitArray[i].slice(1);
    }
    return splitArray.join(" ");
    
}
//////////////////////////////////////////////////////////////////////
// Function 7 - Welcome Message //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function welcomeMessage(object) {

var newMsg = object.name.charAt(0).toUpperCase() + object.name.slice(1);

return `Welcome ${newMsg}!`;
 
}

//////////////////////////////////////////////////////////////////////
// Function 8 - Profile Info /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function profileInfo(object) {
var name = object.name.charAt(0).toUpperCase() + object.name.slice(1);
var species = object.species.charAt(0).toUpperCase() + object.species.slice(1);

return `${name} is a ${species}`;
}

//////////////////////////////////////////////////////////////////////
// Function 9 - Maybe Noises /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function maybeNoises(object) {

if (!object.noises || !object.noises.length) {
    return "there are no noises";
} else {
    return object.noises.join(" ");
}

}


//////////////////////////////////////////////////////////////////////
// Function 10 - Has Words ///////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function hasWord(string, word) {
var splitString = string.split(" ");

for (var i = 0; i < splitString.length; i++) {
    if (splitString[i] === word) {
        return true;
    }
}
return false;

}
//////////////////////////////////////////////////////////////////////
// Function 11 - Add Friend //////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function addFriend (name, object) {
object.friends.push(name);
return object;
}

//////////////////////////////////////////////////////////////////////
// Function 12 - Is Friend ///////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function isFriend(name, object) {

if (!object.friends) {
    return false;
}

if (object.friends.includes(name)) {
    return true;
} else {
    return false;
}
}
//////////////////////////////////////////////////////////////////////
// Function 13 - Non-Friends /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function nonFriends(name, array) {
    
    var nameList = [];
    var endArray = [];
    var noVal = null;

    for(var i=0; i<array.length; i++){
        if(name === array[i].name){
            noVal = array[i];
            
        }else{
            nameList.push(array[i].name);
        }
    }

    if(noVal === null){
        return nameList;
    }
    
    for(var i=0; i<nameList.length; i++){
       
        if(noVal.friends.indexOf(nameList[i]) == -1){
            endArray.push(nameList[i]);
        }
    }
    return endArray;
}

//////////////////////////////////////////////////////////////////////
// Function 14 - Update Object ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function updateObject(object, key, value) {
//bracket notation to update the object with a key on value
object[key] = value;

return object;
    
}
//////////////////////////////////////////////////////////////////////
// Function 15 - Remove Properties ///////////////////////////////////
//////////////////////////////////////////////////////////////////////

function removeProperties(object, array) {
    
    var keyArray = Object.keys(object);
    var valArray = Object.values(object);
    var keyVal = valArray.concat(keyArray);
    
    for (var i = 0; i < array.length; i ++) {
        if (keyVal.includes(array[i])) {
            delete object[array[i]];
        }
    }
}
//////////////////////////////////////////////////////////////////////
// Function 16 - Dedup ///////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function dedup(array) {
    
var newArray = [...new Set(array)];
return newArray;

}

//////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE ////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

if((typeof process !== 'undefined') &&
   (typeof process.versions.node !== 'undefined')) {
    // here, export any references you need for tests //
    module.exports.objectValues = objectValues;
    module.exports.keysToString = keysToString;
    module.exports.valuesToString = valuesToString;
    module.exports.arrayOrObject = arrayOrObject;
    module.exports.capitalizeWord = capitalizeWord;
    module.exports.capitalizeAllWords = capitalizeAllWords;
    module.exports.welcomeMessage = welcomeMessage;
    module.exports.profileInfo = profileInfo;
    module.exports.maybeNoises = maybeNoises;
    module.exports.hasWord = hasWord;
    module.exports.addFriend = addFriend;
    module.exports.isFriend = isFriend;
    module.exports.nonFriends = nonFriends;
    module.exports.updateObject = updateObject;
    module.exports.removeProperties = removeProperties;
    module.exports.dedup = dedup;
}